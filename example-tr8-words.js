{"nodeMap":{"nodeMap":{"n3":{"n4":1},"n4":{"n27":1,"n28":1,"n29":1},"n17":{"n19":1},"n21":{"n22":1},"n24":{"n25":1},"n27":{"n17":1},"n28":{"n21":1},"n29":{"n24":1}},"portMap":{"n3.note-on":{"n4.note-on":true},"n17.chain-id":{"n19.chain-id":true},"n21.chain-id":{"n22.chain-id":true},"n24.chain-id":{"n25.chain-id":true},"n4.BD":{"n27.in":true},"n27.out":{"n17.amount":true},"n4.SD":{"n28.in":true},"n28.out":{"n21.amount":true},"n4.CH":{"n29.in":true},"n29.out":{"n24.amount":true}},"inputsMap":{"n4.note-on":{"n3.note-on":true},"n19.chain-id":{"n17.chain-id":true},"n22.chain-id":{"n21.chain-id":true},"n25.chain-id":{"n24.chain-id":true},"n27.in":{"n4.BD":true},"n17.amount":{"n27.out":true},"n28.in":{"n4.SD":true},"n21.amount":{"n28.out":true},"n29.in":{"n4.CH":true},"n24.amount":{"n29.out":true}},"values":{"n3":{"device-id":"-486371328","channel":0,"message":false,"realtime":false,"beat":"quarter note","note-on":true,"note-off":false,"cc":false,"zero-as-off":true},"n4":{"note-on":"153,49,80"},"n17":{"chain-id":"","type":"opacity","amount":20},"n19":{"chain-id":"c5","selector":"#BD"},"n21":{"chain-id":"","type":"opacity","amount":20},"n22":{"chain-id":"c9","selector":"#SD"},"n24":{"chain-id":"","type":"opacity","amount":20},"n25":{"chain-id":"c182","selector":"#CH"},"n27":{"in":"153,36,80","high-value":1,"low-value":0.2,"delay":100},"n28":{"in":"153,38,80","high-value":1,"low-value":0.2,"delay":100},"n29":{"in":"153,42,80","high-value":1,"low-value":0.2,"delay":20}},"nextId":30,"nodeOrder":["n3","n4","n17","n19","n21","n22","n24","n25","n27","n28","n29"],"byId":{"n3":{"id":"n3","rev":0,"text":"class MIDIDevice extends N {\n\tstatic get type() { return N.HARDWARE };\n\n\tstatic get inputs() {\n\t\treturn [\n\t\t\t{\n\t\t\t\tname: \"device-id\",\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: \"\",\n\t\t\t\trestrict: String,\n\t\t\t\tvisible: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"channel\",\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: 0,\n\t\t\t\trestrict: N.int(0, 16),\n\t\t\t\tcontrol: N.range()\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"message\",\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: false,\n\t\t\t\trestrict: Boolean\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"realtime\",\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: false,\n\t\t\t\trestrict: Boolean\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"beat\",\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: \"quarter note\",\n\t\t\t\trestrict: N.set([\"24ppqn\", \"quarter note\", \"bar\", \"4 bars\"])\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"note-on\",\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: false,\n\t\t\t\trestrict: Boolean\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"note-off\",\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: false,\n\t\t\t\trestrict: Boolean\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"cc\",\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: false,\n\t\t\t\trestrict: Boolean\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"zero-as-off\",\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: true,\n\t\t\t\trestrict: Boolean\n\t\t\t}\n\t\t];\n\t}\n\n\tstatic get outputs() {\n\t\treturn [\"message\", \"start\", \"stop\", \"continue\", \"clock\", \"note-on\", \"note-off\", \"cc\"];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetInput(id) {\n\t\tconsole.log('SET INPUT', id);\n\t\tif(!this.inputs) return;\n\n\t\tthis.removeMIDIListeners();\n\n\t\tif (id !== \"\") {\n\t\t\tlet input = this.inputs.get(id);\n\t\t\tif (input) {\n\t\t\t\tinput.addEventListener(\"midimessage\", this.boundOnMIDIMessage);\n\t\t\t}\n\t\t}\n\n\t\tthis.root.getElementById('select').value = id;\n\t}\n\n\tonAttrChanged(name, oldValue, newValue) {\n\t\tconsole.log('ACC', name, oldValue, newValue);\n\t\tthis.setInput(newValue);\n\t}\n\n\tremoveMIDIListeners() {\n\t\tif (!this.inputs) return;\n\t\tfor (let input of this.inputs.values()) {\n\t\t\tinput.removeEventListener(\"midimessage\", this.boundOnMIDIMessage);\n\t\t}\n\t}\n\n\tonMIDIMessage(event) {\n\t\tlet data = event.data;\n\t\tlet channel = this.getAttribute('channel');\n\t\tlet allowMessage = this.getAttribute('message');\n\t\tlet allowRealTime = this.getAttribute('realtime');\n\t\tlet allowNoteOn = this.getAttribute('note-on');\n\t\tlet allowNoteOff = this.getAttribute('note-off');\n\t\tlet allowCC = this.getAttribute('cc');\n\t\tlet transformNoteOnVelocityZeroAsNoteOff = this.getAttribute('zero-as-off');\n\t\tlet sendClockPerBeat = this.getAttribute('beat');\n\n\t\tif(allowMessage) this.send(\"message\", data.toString())\n\n\t\t//// console.log('got midi', data, channel, allowRealTime, allowNoteOn, allowNoteOff, allowCC)\n\n\t\t// Clock:\n\t\tif(data[0] === 0xFA && allowRealTime) { //start\n\t\t\tthis.sendClock = true;\n\t\t\tthis.clock = 0;\n\t\t\treturn this.send('start', data.toString());\n\t\t}\n\t\tif(data[0] === 0xFC && allowRealTime) { //stop\n\t\t\tthis.sendClock = false;\n\t\t\tthis.clock = 0;\n\t\t\treturn this.send('stop', data.toString());\n\t\t}\n\t\tif(data[0] === 0xFB && allowRealTime) { //continue\n\t\t\treturn this.send('continue', data.toString());\n\t\t}\n\t\tif(data[0] === 0xF8 && allowRealTime && this.sendClock) {\n\t\t\tlet shouldSendBeat = false;\n\t\t\tswitch(sendClockPerBeat) {\n\t\t\t\tcase \"24ppqn\":\n\t\t\t\t\tshouldSendBeat = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"quarter note\":\n\t\t\t\t\tshouldSendBeat = this.clock % 24 === 0;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bar\":\n\t\t\t\t\tshouldSendBeat = this.clock % 96 === 0;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"4 bars\":\n\t\t\t\t\tshouldSendBeat = this.clock === 0;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(shouldSendBeat) this.send('clock', data.toString());\n\t\t\tthis.clock = (this.clock + 1) % 384; //24ppqn * 4 quarter notes * 4 bars\n\t\t}\n\n\t\t// Channel messages:\n\t\tif(channel === 0 || channel === (data[0] & 0x0F) + 1) {\n\t\t\tlet type = data[0] >> 4;\n\n\t\t\tif(type === 0x9 && data[2] === 0 && transformNoteOnVelocityZeroAsNoteOff) {\n\t\t\t\ttype = 0x8\n\t\t\t}\n\n\t\t\tif(type === 0x9 && allowNoteOn) return this.send('note-on', data.toString());\n\t\t\tif(type === 0x8 && allowNoteOff) return this.send('note-off', data.toString());\n\t\t\tif(type === 0xB && allowCC) return this.send('cc', data.toString());\n\t\t}\n\t}\n\n\tonMIDISuccess(midiAccess) {\n\t\tconsole.log('MIDI SUCCESS', midiAccess);\n\t\tthis.inputs = midiAccess.inputs;\n\t\tlet select = this.root.getElementById(\"select\");\n\n\t\tlet option = document.createElement(\"option\");\n\t\toption.innerText = \"Select device...\";\n\t\toption.value = \"\";\n\t\tselect.appendChild(option);\n\n\t\tfor (let input of this.inputs.values()) {\n\t\t\tconsole.log(input);\n\t\t\toption = document.createElement(\"option\");\n\t\t\toption.innerText = input.manufacturer + \" \" + input.name;\n\t\t\toption.value = input.id;\n\t\t\tselect.appendChild(option);\n\t\t}\n\n\t\t// let deviceId = this.getAttribute('device-id');\n\t\t// select.value = deviceId;\n\n\t\tselect.addEventListener(\"change\", event => {\n\t\t\tconsole.log(\"you did it\", event.target.value);\n\t\t\tthis.setAttribute(\"device-id\", event.target.value);\n\t\t});\n\n\t\t// Force listener to listen:\n\t\tthis.setInput(this.getAttribute('device-id'));\n\t}\n\n\tonMIDIFailure() {\n\t\talert(\"Unable to obtain MIDI access!\");\n\t}\n\n\tonReady() {\n\t\tconsole.log(\"MIDIDEVICE READY!\");\n\n\t\tthis.boundOnMIDIMessage = this.onMIDIMessage.bind(this);\n\t\tnavigator\n\t\t\t.requestMIDIAccess()\n\t\t\t.then(this.onMIDISuccess.bind(this), this.onMIDIFailure.bind(this));\n\t}\n\n\tonDestroy() {\n\t\tconsole.error(\"MIDIDEVICE DESTROY!\");\n\t\tthis.removeMIDIListeners();\n\t}\n}","templateHTML":"<div>\n\t<select id=\"select\"></select>\n</div>","templateCSS":null,"transforms":{}},"n4":{"id":"n4","rev":1,"text":"class TR8SDrumMap extends N {\n\n\tstatic get inputs() {\n\t\treturn [\n\t\t\t{\n\t\t\t\tname: \"note-on\",\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: \"\",\n\t\t\t\trestrict: String\n\t\t\t}\n\t\t];\n\t}\n\n\tstatic get outputs() {\n\t\treturn [\"BD\", \"SD\", \"LT\", \"MT\", \"HT\", \"RS\", \"HC\", \"CH\", \"OH\", \"CC\", \"RC\"];\n\t}\n\n\tonAttrChanged(name, oldValue, newValue) {\n\t\tconsole.log('ACC', name, oldValue, newValue);\n\n\t\tlet midiData = newValue;\n\t\tlet noteNum = parseInt(midiData.split(\",\")[1])\n\n\t\tswitch(noteNum) {\n\t\t\tcase 0x24: this.send(\"BD\", midiData); break;\n\t\t\tcase 0x26: this.send(\"SD\", midiData); break;\n\t\t\tcase 0x2B: this.send(\"LT\", midiData); break;\n\t\t\tcase 0x2F: this.send(\"MT\", midiData); break;\n\t\t\tcase 0x32: this.send(\"HT\", midiData); break;\n\t\t\tcase 0x25: this.send(\"RS\", midiData); break;\n\t\t\tcase 0x27: this.send(\"HC\", midiData); break;\n\t\t\tcase 0x2A: this.send(\"CH\", midiData); break;\n\t\t\tcase 0x2E: this.send(\"OH\", midiData); break;\n\t\t\tcase 0x31: this.send(\"CC\", midiData); break;\n\t\t\tcase 0x33: this.send(\"RC\", midiData); break;\n\t\t}\n\t}\n}","templateHTML":null,"templateCSS":null,"transforms":{}},"n17":{"id":"n17","rev":0,"text":"class CSSFilter extends N {\n\tstatic get inputs() {\n\t  return [\n\t\t\t{\n\t\t\t\tname: 'chain-id',\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: '',\n\t\t\t\trestrict: String\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'type',\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: 'grayscale',\n\t\t\t\trestrict: N.set(['blur', 'brightness', 'contrast', 'grayscale', 'hue-rotate', 'invert', 'opacity', 'saturate', 'sepia'])\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'amount',\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: 0,\n\t\t\t\trestrict: Number\n\t\t\t}\n\t\t]\n\t}\n\n\tstatic get outputs() {\n\t  return ['chain-id']\n\t}\n\n\tgetCSSRule(type, amount) {\n\t\tswitch(type)\n\t\t{\n\t\t\tcase 'blur': return \"blur(\" + amount + \"px)\"\n\t\t\tcase 'brightness': return \"brightness(\" + amount + \"%)\"\n\t\t\tcase 'contrast': return \"contrast(\" + amount + \"%)\"\n\t\t\tcase 'grayscale': return \"grayscale(\" + amount + \"%)\"\n\t\t\tcase 'hue-rotate': return \"hue-rotate(\" + amount + \"deg)\"\n\t\t\tcase 'invert': return \"invert(\" + amount + \"%)\"\n\t\t\tcase 'opacity': return \"opacity(\" + amount + \"%)\"\n\t\t\tcase 'saturate': return \"saturate(\" + amount + \"%)\"\n\t\t\tcase 'sepia': return \"sepia(\" + amount + \"%)\"\n\t\t\tdefault: return null\n\t\t}\n\t}\n\n\tonInputDisconnected(name) {\n\t\tif(name === 'chain-id')\n\t\t{\n\t\t\tthis.releaseChain(this.getAttribute('chain-id'))\n\t\t\tthis.setAttribute('chain-id', '')\n\t\t}\n\t}\n\n\tonAttrChanged(name, oldValue, newValue) {\n\t\tlet rule = this.getCSSRule(this.getAttribute('type'), this.getAttribute('amount'))\n\t\tif(!rule) return\n\n\t\tlet chain = this.getChain(this.getAttribute('chain-id'))\n\t\tchain.set(this.id, rule);\n\n\t\tthis.send('chain-id', chain.id);\n\t}\n\n\tonDestroy() {\n\t\tthis.releaseChain(this.getAttribute('chain-id'))\n\t}\n}","templateHTML":null,"templateCSS":null,"transforms":{"amount":"x*100"}},"n19":{"id":"n19","rev":0,"text":"class CSSFilterElement extends N {\n\tstatic get type() { return N.SCREEN }\n\n\tstatic get inputs() {\n\t\treturn [\n\t\t\t{\n\t\t\t\tname: \"chain-id\",\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: \"\",\n\t\t\t\trestrict: String\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"selector\",\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: \"body\",\n\t\t\t\trestrict: String\n\t\t\t}\n\t\t];\n\t}\n\n\tgetEl(selector) {\n\t\ttry {\n\t\t\treturn this.screen.querySelector(selector);\n\t\t} catch (e) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tsetFilter(selector, filterText) {\n\t\tlet el = this.getEl(selector);\n\t\tif (el) el.style.filter = filterText;\n\t}\n\n\tonInputDisconnected(name) {\n\t\tif(name === 'chain-id')\n\t\t{\n\t\t\tthis.setAttribute('chain-id', '')\n\t\t}\n\t}\n\n\tgetCSSFilterString(chainId) {\n\t\tlet chain = this.getChain(chainId);\n\t\tif(!chain) return ''\n\n\t\treturn chain.get().join(' ')\n\t}\n\n\tonAttrChanged(name, oldValue, newValue) {\n\t\tswitch (name) {\n\t\t\tcase \"selector\":\n\t\t\t\tthis.setFilter(oldValue, '');\n\t\t\t\tthis.setFilter(newValue, this.getCSSFilterString(this.getAttribute(\"chain-id\")));\n\t\t\t\tbreak;\n\n\t\t\tcase \"chain-id\":\n\t\t\t\tthis.setFilter(this.getAttribute('selector'), this.getCSSFilterString(newValue));\n\t\t\t\tbreak;\n\t\t}\n\t}\n}","templateHTML":null,"templateCSS":null,"transforms":{}},"n21":{"id":"n21","rev":0,"text":"class CSSFilter extends N {\n\tstatic get inputs() {\n\t  return [\n\t\t\t{\n\t\t\t\tname: 'chain-id',\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: '',\n\t\t\t\trestrict: String\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'type',\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: 'grayscale',\n\t\t\t\trestrict: N.set(['blur', 'brightness', 'contrast', 'grayscale', 'hue-rotate', 'invert', 'opacity', 'saturate', 'sepia'])\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'amount',\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: 0,\n\t\t\t\trestrict: Number\n\t\t\t}\n\t\t]\n\t}\n\n\tstatic get outputs() {\n\t  return ['chain-id']\n\t}\n\n\tgetCSSRule(type, amount) {\n\t\tswitch(type)\n\t\t{\n\t\t\tcase 'blur': return \"blur(\" + amount + \"px)\"\n\t\t\tcase 'brightness': return \"brightness(\" + amount + \"%)\"\n\t\t\tcase 'contrast': return \"contrast(\" + amount + \"%)\"\n\t\t\tcase 'grayscale': return \"grayscale(\" + amount + \"%)\"\n\t\t\tcase 'hue-rotate': return \"hue-rotate(\" + amount + \"deg)\"\n\t\t\tcase 'invert': return \"invert(\" + amount + \"%)\"\n\t\t\tcase 'opacity': return \"opacity(\" + amount + \"%)\"\n\t\t\tcase 'saturate': return \"saturate(\" + amount + \"%)\"\n\t\t\tcase 'sepia': return \"sepia(\" + amount + \"%)\"\n\t\t\tdefault: return null\n\t\t}\n\t}\n\n\tonInputDisconnected(name) {\n\t\tif(name === 'chain-id')\n\t\t{\n\t\t\tthis.releaseChain(this.getAttribute('chain-id'))\n\t\t\tthis.setAttribute('chain-id', '')\n\t\t}\n\t}\n\n\tonAttrChanged(name, oldValue, newValue) {\n\t\tlet rule = this.getCSSRule(this.getAttribute('type'), this.getAttribute('amount'))\n\t\tif(!rule) return\n\n\t\tlet chain = this.getChain(this.getAttribute('chain-id'))\n\t\tchain.set(this.id, rule);\n\n\t\tthis.send('chain-id', chain.id);\n\t}\n\n\tonDestroy() {\n\t\tthis.releaseChain(this.getAttribute('chain-id'))\n\t}\n}","templateHTML":null,"templateCSS":null,"transforms":{"amount":"x*100"}},"n22":{"id":"n22","rev":0,"text":"class CSSFilterElement extends N {\n\tstatic get type() { return N.SCREEN }\n\n\tstatic get inputs() {\n\t\treturn [\n\t\t\t{\n\t\t\t\tname: \"chain-id\",\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: \"\",\n\t\t\t\trestrict: String\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"selector\",\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: \"body\",\n\t\t\t\trestrict: String\n\t\t\t}\n\t\t];\n\t}\n\n\tgetEl(selector) {\n\t\ttry {\n\t\t\treturn this.screen.querySelector(selector);\n\t\t} catch (e) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tsetFilter(selector, filterText) {\n\t\tlet el = this.getEl(selector);\n\t\tif (el) el.style.filter = filterText;\n\t}\n\n\tonInputDisconnected(name) {\n\t\tif(name === 'chain-id')\n\t\t{\n\t\t\tthis.setAttribute('chain-id', '')\n\t\t}\n\t}\n\n\tgetCSSFilterString(chainId) {\n\t\tlet chain = this.getChain(chainId);\n\t\tif(!chain) return ''\n\n\t\treturn chain.get().join(' ')\n\t}\n\n\tonAttrChanged(name, oldValue, newValue) {\n\t\tswitch (name) {\n\t\t\tcase \"selector\":\n\t\t\t\tthis.setFilter(oldValue, '');\n\t\t\t\tthis.setFilter(newValue, this.getCSSFilterString(this.getAttribute(\"chain-id\")));\n\t\t\t\tbreak;\n\n\t\t\tcase \"chain-id\":\n\t\t\t\tthis.setFilter(this.getAttribute('selector'), this.getCSSFilterString(newValue));\n\t\t\t\tbreak;\n\t\t}\n\t}\n}","templateHTML":null,"templateCSS":null,"transforms":{}},"n24":{"id":"n24","rev":0,"text":"class CSSFilter extends N {\n\tstatic get inputs() {\n\t  return [\n\t\t\t{\n\t\t\t\tname: 'chain-id',\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: '',\n\t\t\t\trestrict: String\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'type',\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: 'grayscale',\n\t\t\t\trestrict: N.set(['blur', 'brightness', 'contrast', 'grayscale', 'hue-rotate', 'invert', 'opacity', 'saturate', 'sepia'])\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'amount',\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: 0,\n\t\t\t\trestrict: Number\n\t\t\t}\n\t\t]\n\t}\n\n\tstatic get outputs() {\n\t  return ['chain-id']\n\t}\n\n\tgetCSSRule(type, amount) {\n\t\tswitch(type)\n\t\t{\n\t\t\tcase 'blur': return \"blur(\" + amount + \"px)\"\n\t\t\tcase 'brightness': return \"brightness(\" + amount + \"%)\"\n\t\t\tcase 'contrast': return \"contrast(\" + amount + \"%)\"\n\t\t\tcase 'grayscale': return \"grayscale(\" + amount + \"%)\"\n\t\t\tcase 'hue-rotate': return \"hue-rotate(\" + amount + \"deg)\"\n\t\t\tcase 'invert': return \"invert(\" + amount + \"%)\"\n\t\t\tcase 'opacity': return \"opacity(\" + amount + \"%)\"\n\t\t\tcase 'saturate': return \"saturate(\" + amount + \"%)\"\n\t\t\tcase 'sepia': return \"sepia(\" + amount + \"%)\"\n\t\t\tdefault: return null\n\t\t}\n\t}\n\n\tonInputDisconnected(name) {\n\t\tif(name === 'chain-id')\n\t\t{\n\t\t\tthis.releaseChain(this.getAttribute('chain-id'))\n\t\t\tthis.setAttribute('chain-id', '')\n\t\t}\n\t}\n\n\tonAttrChanged(name, oldValue, newValue) {\n\t\tlet rule = this.getCSSRule(this.getAttribute('type'), this.getAttribute('amount'))\n\t\tif(!rule) return\n\n\t\tlet chain = this.getChain(this.getAttribute('chain-id'))\n\t\tchain.set(this.id, rule);\n\n\t\tthis.send('chain-id', chain.id);\n\t}\n\n\tonDestroy() {\n\t\tthis.releaseChain(this.getAttribute('chain-id'))\n\t}\n}","templateHTML":null,"templateCSS":null,"transforms":{"amount":"x*100"}},"n25":{"id":"n25","rev":0,"text":"class CSSFilterElement extends N {\n\tstatic get type() { return N.SCREEN }\n\n\tstatic get inputs() {\n\t\treturn [\n\t\t\t{\n\t\t\t\tname: \"chain-id\",\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: \"\",\n\t\t\t\trestrict: String\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"selector\",\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: \"body\",\n\t\t\t\trestrict: String\n\t\t\t}\n\t\t];\n\t}\n\n\tgetEl(selector) {\n\t\ttry {\n\t\t\treturn this.screen.querySelector(selector);\n\t\t} catch (e) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tsetFilter(selector, filterText) {\n\t\tlet el = this.getEl(selector);\n\t\tif (el) el.style.filter = filterText;\n\t}\n\n\tonInputDisconnected(name) {\n\t\tif(name === 'chain-id')\n\t\t{\n\t\t\tthis.setAttribute('chain-id', '')\n\t\t}\n\t}\n\n\tgetCSSFilterString(chainId) {\n\t\tlet chain = this.getChain(chainId);\n\t\tif(!chain) return ''\n\n\t\treturn chain.get().join(' ')\n\t}\n\n\tonAttrChanged(name, oldValue, newValue) {\n\t\tswitch (name) {\n\t\t\tcase \"selector\":\n\t\t\t\tthis.setFilter(oldValue, '');\n\t\t\t\tthis.setFilter(newValue, this.getCSSFilterString(this.getAttribute(\"chain-id\")));\n\t\t\t\tbreak;\n\n\t\t\tcase \"chain-id\":\n\t\t\t\tthis.setFilter(this.getAttribute('selector'), this.getCSSFilterString(newValue));\n\t\t\t\tbreak;\n\t\t}\n\t}\n}","templateHTML":null,"templateCSS":null,"transforms":{}},"n27":{"id":"n27","rev":1,"text":"class Delay extends N {\n\tstatic get inputs() {\n\t  return [\n\t\t\t{\n\t\t\t\tname: 'in',\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: null,\n\t\t\t\trestrict: null,\n\t\t\t\tcontrol: N.button()\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'high-value',\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: 1,\n\t\t\t\trestrict: Number\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'low-value',\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: 0,\n\t\t\t\trestrict: Number\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'delay',\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: 200,\n\t\t\t\trestrict: N.int(0),\n\t\t\t\tcontrol: N.range({ min:0, max:10000, step:10})\n\t\t\t}\n\t\t]\n\t}\n\n\tstatic get outputs() {\n\t  return ['out']\n\t}\n\n\tonDestroy() {\n\t\twindow.clearTimeout(this.timeoutId);\n\t}\n\n\tonAttrChanged(name, oldValue, newValue) {\n\t\tlet high = this.getAttribute('high-value')\n\t\tlet low = this.getAttribute('low-value')\n\t\tlet delay = this.getAttribute('delay')\n\t\t\n\t\twindow.clearTimeout(this.timeoutId);\n\n\t\tthis.send('out', high);\n\t\tthis.timeoutId = setTimeout(() => {\n\t\t\tthis.send('out', low)\n\t\t}, delay)\n\t}\n}","templateHTML":null,"templateCSS":null,"transforms":{}},"n28":{"id":"n28","rev":1,"text":"class Delay extends N {\n\tstatic get inputs() {\n\t  return [\n\t\t\t{\n\t\t\t\tname: 'in',\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: null,\n\t\t\t\trestrict: null,\n\t\t\t\tcontrol: N.button()\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'high-value',\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: 1,\n\t\t\t\trestrict: Number\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'low-value',\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: 0,\n\t\t\t\trestrict: Number\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'delay',\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: 200,\n\t\t\t\trestrict: N.int(0),\n\t\t\t\tcontrol: N.range({ min:0, max:10000, step:10})\n\t\t\t}\n\t\t]\n\t}\n\n\tstatic get outputs() {\n\t  return ['out']\n\t}\n\n\tonDestroy() {\n\t\twindow.clearTimeout(this.timeoutId);\n\t}\n\n\tonAttrChanged(name, oldValue, newValue) {\n\t\tlet high = this.getAttribute('high-value')\n\t\tlet low = this.getAttribute('low-value')\n\t\tlet delay = this.getAttribute('delay')\n\t\t\n\t\twindow.clearTimeout(this.timeoutId);\n\n\t\tthis.send('out', high);\n\t\tthis.timeoutId = setTimeout(() => {\n\t\t\tthis.send('out', low)\n\t\t}, delay)\n\t}\n}","templateHTML":null,"templateCSS":null,"transforms":{}},"n29":{"id":"n29","rev":1,"text":"class Delay extends N {\n\tstatic get inputs() {\n\t  return [\n\t\t\t{\n\t\t\t\tname: 'in',\n\t\t\t\tobserve: true,\n\t\t\t\tdefaultValue: null,\n\t\t\t\trestrict: null,\n\t\t\t\tcontrol: N.button()\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'high-value',\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: 1,\n\t\t\t\trestrict: Number\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'low-value',\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: 0,\n\t\t\t\trestrict: Number\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'delay',\n\t\t\t\tobserve: false,\n\t\t\t\tdefaultValue: 200,\n\t\t\t\trestrict: N.int(0),\n\t\t\t\tcontrol: N.range({ min:0, max:10000, step:10})\n\t\t\t}\n\t\t]\n\t}\n\n\tstatic get outputs() {\n\t  return ['out']\n\t}\n\n\tonDestroy() {\n\t\twindow.clearTimeout(this.timeoutId);\n\t}\n\n\tonAttrChanged(name, oldValue, newValue) {\n\t\tlet high = this.getAttribute('high-value')\n\t\tlet low = this.getAttribute('low-value')\n\t\tlet delay = this.getAttribute('delay')\n\t\t\n\t\twindow.clearTimeout(this.timeoutId);\n\n\t\tthis.send('out', high);\n\t\tthis.timeoutId = setTimeout(() => {\n\t\t\tthis.send('out', low)\n\t\t}, delay)\n\t}\n}","templateHTML":null,"templateCSS":null,"transforms":{}}},"chainPool":{"nodeIdToChainId":{"n0":"c0","n1":"c4","n17":"c5","n18":"c7","n21":"c9","n24":"c182"},"nextChainId":183,"pool":{"c0":{"id":"c0","values":[{"id":"n0","v":"hue-rotate(180deg)"}]},"c4":{"id":"c4","values":[]},"c5":{"id":"c5","values":[{"id":"n17","v":"opacity(20%)"}]},"c7":{"id":"c7","values":[]},"c9":{"id":"c9","values":[{"id":"n21","v":"opacity(20%)"}]},"c182":{"id":"c182","values":[{"id":"n24","v":"opacity(20%)"}]}}}},"editingNodeId":null,"editingPage":false,"selectedConnection":null,"connecting":null,"pageHTML":"<body>\n<div id=\"BD\">KICK</div>\n<div id=\"SD\">SNARE</div>\n<div id=\"CH\">HAT</div>\n</body>","pageCSS":"body {\n\twidth: 100%;\n\theight: 100%;\n\tmargin: 0;\n\tpadding: 0;\n\tfont-size: 94pt;\n\ttransform: scale(0.5, 1);\n\tfont-family: Arial, Helvetica, sans-serif;\n\tcolor: white;\n\tbackground: black;\n\tfont-weight: bold;\n}","nodeUIMap":{"n0":{"pos":[179,151],"control":{"type":true,"amount":true}},"n1":{"pos":[801,180]},"n2":{"pos":[514,250],"control":{"amount":true,"type":true}},"n3":{"pos":[52,46],"control":{"note-on":true}},"n4":{"pos":[222,120]},"n5":{"pos":[651,140],"control":{"i":true}},"n6":{"pos":[630,108],"control":{"i":true}},"n7":{"pos":[636,211],"control":{"i":true}},"n8":{"pos":[628,315],"control":{"i":true}},"n9":{"pos":[887,2],"control":{"i":true}},"n10":{"pos":[881,103],"control":{"i":true}},"n11":{"pos":[892,214],"control":{"i":true}},"n12":{"pos":[893,319],"control":{"i":true}},"n13":{"pos":[26,402],"control":{"i":true}},"n14":{"pos":[302,424],"control":{"i":true}},"n15":{"pos":[569,418],"control":{"i":true}},"n16":{"pos":[506,15],"control":{"delay":true}},"n17":{"pos":[799,3],"control":{"type":true,"amount":true}},"n18":{"pos":[1018,195],"control":{"selector":true}},"n19":{"pos":[1022,75],"control":{"selector":true}},"n20":{"pos":[608,169]},"n21":{"pos":[737,233],"control":{"type":true}},"n22":{"pos":[994,280],"control":{"selector":true}},"n23":{"pos":[148,422]},"n24":{"pos":[458,434],"control":{"type":true}},"n25":{"pos":[771,462]},"n27":{"pos":[523,-13],"control":{"delay":true,"low-value":true}},"n28":{"pos":[481,195],"control":{"delay":true,"low-value":true}},"n29":{"pos":[161,402],"control":{"delay":true,"low-value":true}}},"fullscreen":false}